name: Go

on:
  push:
    branches: [ main ] 
  pull_request:
    branches: [ main ]

env:
  REGISTRY: cr.selcloud.ru/test-auth
  IMAGE_NAME: chat-server
  CONTAINER_NAME: chat-server-container

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: go.sum

      - name: Build
        run: go build -o ./bin/ -v ./...

      - name: Test
        run: go test -v ./...

  linters:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.53

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          args: --timeout=30m --config=./.golangci.pipeline.yaml --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

  # image-build-and-push:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: checkout master
  #       uses: actions/checkout@v3

  #     - name: setup docker buildx
  #       uses: docker/setup-buildx-actions@v2

  #     - name: login docker registry
  #       uses: docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

  #     - name: build and push docker image
  #       uses: |
  #         TAG_NAME=$(echo $GITHUB_SHA | head -c7)
  #         docker buildx create --use
  #         docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME .

  # deploy_image:
  #     runs-on: ubuntu-latest
  #     needs: image-build-and-push

  #     steps:
  #       - name: deploy to selectel cloud via SSH action
  #         uses: appleboy/ssh-action@v1.0.0
  #         with:
  #           host: ${{ secrets.SERVER_HOST }}
  #           username: ${{ secrets.SSH_USERNAME }}
  #           key: ${{ secrets.SSHKEY }}
  #           envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
  #           scripts: |
  #             TAG_NAME=$(echo $GITHUB_SHA | head -c7)
  #             docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
              
  #             docker stop $CONTAINER_NAME
              
  #             docker rm $CONTAINER_NAME
              
  #             docker run -d -p 50051:50051 --name $CONTAINER_NAME -t $REGISTRY/$IMAGE_NAME:$TAG_NAME